    <?phpclass Frontend_Form_SignUpFansForm extends Zend_Form {protected $_categories = null;        public function __construct($options = null, $categories = null)    {        //        if($this->_categories === null) {//            $user = new Frontend_Model_User();//            $list = $user->getList();//            fb($list);//            $this->_categories = array();////            //            foreach($list as $category) {//                fb($category);//                $this->_categories[$category['iId']] = $category['vName'];//                fb($this->_categories);//            }//        }                // Attention: parent construct have to be called after our code        // because the parent construct runs the init() function. So it would        // be too late to add our categories!        parent::__construct($options);    }    public function init() {        $this->setMethod('post');        $this->setAction('fans');        $this->setAttribs(array(            'autocomplete'=> 'off'        ));        $vName = $this->createElement('text', 'vName');        $vName->setAttribs(array(                    'style' => 'width:95%;',                    'class'=> 'loginform',                    'placeholder'=> 'Name...'//                    'required'=> 'required;'                    ))                ->setLabel('Name');                $vLastname = $this->createElement('text', 'vLastname');        $vLastname->setAttribs(array(                    'style' => 'width:95%;',                    'class'=> 'loginform',                    'placeholder'=> 'Last Name...'//                    'required'=> 'required;'                    ))                ->setLabel('Last Name');        //        $vTitle = new Zend_Form_Element_Text('vTitle');//        $vTitle->setLabel('Title Band')//                ->setRequired(true)////                ->setAttrib('required', 'required')//                ->setAttribs(array(//                    'style' => 'width:95%;',//                    'required'=> 'required;'//                    ))//                ->addValidator(new Zend_Validate_Regex('/^[\w.-]*$/'))//                ->addValidator(new Zend_Validate_StringLength(array('min' => 5,'max' => 255)), true);//                ->addErrorMessage('Please enter a valid title');                           //                ->addValidator(array(//                    array('StringLength', FALSE, array(3, 255)),//                    array('Regex', FALSE, array('pattern' => '/[a-z][A-Z][0-9]-_./'))//                ));                //        $vLastName = new Zend_Form_Element_Text('vLastName');//        $vLastName->setLabel('Last Name');                $vEmail = new Zend_Form_Element_Text('vEmail');                $vEmail->setRequired(true)//                ->setAttrib('required', 'required')                ->setAttribs(array(                    'style' => 'width:95%;',                    'required'=> 'required;',                    'class'=> 'loginform',                    'placeholder'=> 'Emial...'                    ))                ->setLabel('Email')                ->addFilters(array(                    new Zend_Filter_StringTrim(),                    new Zend_Filter_StringToLower()                ))//                'validators' => array('EmailAddress');//                ->addFilter('StripTags')//                ->addFilter('HtmlEntities')//                ->addFilter('StringToLower')//                ->addFilter('StringTrim')//                 ->addValidator(new Zend_Validate_Identical())                ->addValidator(new Zend_Validate_EmailAddress())                ->addValidator(new Zend_Validate_Db_NoRecordExists('members', 'vEmail'));                //$vEmailConfirm = new Zend_Form_Element_Text('vEmailConfirm');                //$vEmailConfirm->setRequired(true)//                ->setAttrib('required', 'required')               // ->setAttribs(array(                 //   'style' => 'width:95%;',                //    'class'=> 'loginform',                //    'placeholder'=> 'Repeat Email...',                //    'required'=> 'required;'                //    ))               // ->setLabel('Repeat Email')              //  ->addFilter('StripTags')//                ->addFilter('HtmlEntities')//                ->addFilter('StringToLower')//                ->addFilter('StringTrim')//                ->setMessage('sasasasa')               // ->addValidator(new Zend_Validate_EmailAddress())               //  ->addValidator(new Zend_Validate_Identical());                $vPassword = new Zend_Form_Element_Password('vPassword');        $vPassword->setLabel('Password')                ->setRequired(true)                ->addValidator(new Zend_Validate_StringLength(array('min' => 8,'max' => 35)), true)                ->setAttribs(array(                    'style' => 'width:95%;',                    'class'=> 'loginform',                    'placeholder'=> 'Password...',                    'required'=> 'required;'                    ));//                ->setAttrib('required', 'required');                //$vPasswordConfirm = new Zend_Form_Element_Password('vPasswordConfirm');        //$vPasswordConfirm->setLabel('confirm Password')                  //      ->setRequired(true)//                        ->setAttrib('required', 'required')                    //    ->setAttribs(array(                    //        'style' => 'width:95%;',                    //        'class'=> 'loginform',                    //        'placeholder'=> 'Confirm Password...',                    //        'required'=> 'required;'                   //         ))                   //     ->addValidator(new Zend_Validate_Confirm('vPassword'));        //        $birthday = new Zend_Form_Element_Text('birthday');//        $birthday->setLabel('Birthday')//                ->setValue('1999-01-01')//                ->addFilter('StripTags')//                ->setRequired(true)//                        ->setAttrib('required', 'required')//                ->addValidator(new Zend_Validate_Date(array('format'=>'yyyy-MM-dd')));                //        //        $currency = new Zend_Form_Element_Select('currency', array(//                "label" => "Currency",////                "required" => true,//             ));//        $currency->addMultiOptions($this->_categories);        //        $ref = new Zend_Form_Element_Checkbox('vRef');//        $ref-> setLabel('I agree to the conditions below:');                //         $currency->addMultiOptions(array(//                 "US Dollar" => 1,//                 "Pound Sterling" => 2,//             ));//         $form->addElements(array($currency));//         $form->populate(array("currency" => "US Dollar"));                //        $message = new Zend_Form_Element_Textarea('vMessage');//        $message->setLabel('Desc')//                ->setAttribs(array('COLS'=>'15','ROWS'=>'5'));//          //        $recaptcha = new Zend_Service_ReCaptcha("6Lek5t8SAAAAAGa3frY1bE4teTIvzLSLLMDNHLuZ","6Lek5t8SAAAAAIQm5tIU45jrcWv2-Wgj2U9xAfk-");//        // then set the Recaptcha adapter //        $adapter = new Zend_Captcha_ReCaptcha(); //        $adapter->setService( $recaptcha ); ////        // then set  the captcha element to use the ReCaptcha Adapter //        $captcha = new Zend_Form_Element_Captcha('recaptcha', array( //                        'label' => "Are you a human?", //                        'captcha' => $adapter //        ));                                                 $submit=new Zend_Form_Element_Submit('save_changes');        $submit->setLabel('Register');        $submit->setAttrib('class', 'btn btn-inverse pull-left');//        ->setAttrib('disabled', 'disabled');                                $this->addElements(array($vName, $vLastname, $vEmail,$vEmailConfirm, $vPassword,$vPasswordConfirm ,$submit));                    }}